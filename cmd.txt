//writing docker
mkdir dockerfilesample
cd dockerfilesample
echo > Dockerfile

FROM nginx
copy index.html /usr/share/nginx/html

docker build -t dockerfilesample .
docker run -p 8080:80 dockerfilesample
localhost:8080

//docker compose 
mkdir html-cluster
cd html-cluster
notepad nginx.conf
echo > docker-compose.yml

docker-compose up -d
docker ps

//nginx.conf
server {
listen 80;
server_name localhost;
location / {
root /usr/share/nginx/html; 
index index.html;
}
}

//docker-compose.yml 
version: '3.9'

services:
  web-node-1:
    image: nginx:latest
    container_name: web-node-1
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8081:80"
    networks:
      - html-cluster

  web-node-2:
    image: nginx:latest
    container_name: web-node-2
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8082:80"
    networks:
      - html-cluster

  web-node-3:
    image: nginx:latest
    container_name: web-node-3
    volumes:
      - ./index.html:/usr/share/nginx/html/index.html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "8083:80"
    networks:
      - html-cluster

networks:
  html-cluster:
    driver: bridge



//docker swarm
docker swarm init --default-addr-pool 10.20.0.0/16
docker service create --name webapp --replicas 3 -p 8080:80 nginx:1.17.6
docker service scale webapp=5
docker service update --image nginx:1.19.8 webapp
docker service ls --filter name=webapp
docker ps -a
docker swarm leave --force
docker system prune -a --volumes

//kubernates
kubectl config get-contexts
kubectl config use-context docker-desktop

//minicube
kubectl version --client
minikube version
minikube start
kubectl cluster-info
kubectl create deployment nginx-deployment --image=nginx
kubectl get all
kubectl expose deployment nginx-deployment --port=80 --type=NodePort
kubectl get service
minikube service nginx-deployment


